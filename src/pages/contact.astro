---
import NavLayout from '../layouts/NavLayout.astro';
import type { ContactInfo } from '../types';

// Importación de la URL de la API secreta desde las variables de entorno
const response = await fetch(import.meta.env.SECRET_API_URL + '/datacontact')
let contactInfo: ContactInfo | undefined
if (response.status == 200) {
  contactInfo = (await response.json()).data
}
---

<NavLayout title='Contacto'>
  <main class="container mx-auto p-8">
    <div class="container mx-auto">
      <h1 class="text-4xl font-bold text-purple">Contacto</h1>
    </div>
    <section class="p-8">
      <h2 class="text-2xl mb-3">Para cualquier consulta, puedes visitarnos o enviarnos un mensaje a través de este formulario. Estaremos encantadas de responder lo antes posible.</h2>

      <div class="grid grid-cols-1 md:grid-cols-2 items-center gap-8 w-full">
        <!-- Información de contacto -->
        {contactInfo!=undefined &&
          <div class="bg-white text-lg p-6 rounded-lg shadow-md hover:shadow-lg transition-shadow duration-300">
            <h2 class="text-xl font-bold mb-4 text-purple">Información de Contacto</h2>
            {contactInfo.attributes.telefono&&<p><strong class="text-xl font-bold mb-4 text-purple">Teléfono: </strong> {contactInfo.attributes.telefono}</p>}
            {contactInfo.attributes.celular&&<p><strong class="text-xl font-bold mb-4 text-purple">Celular: </strong> {contactInfo.attributes.celular}</p>}
            {contactInfo.attributes.direccion&&<p><strong class="text-xl font-bold mb-4 text-purple">Dirección: </strong> {contactInfo.attributes.direccion}</p>}
            {contactInfo.attributes.correo&&<p><strong class="text-xl font-bold mb-4 text-purple">Correo: </strong> <span id="correo">{contactInfo.attributes.correo}</span></p>}
          </div>
        }
        <!-- Formulario de contacto -->
        <form id="contact-form" class="bg-white text-lg p-6 rounded-lg shadow-md hover:shadow-lg transition-shadow duration-300">
          <h2 class="text-xl font-bold mb-4 text-purple">Envíanos un mensaje</h2>
          <div class="mb-6">
            <label for="name" class="block mb-2">Nombre:</label>
            <input type="text" id="user_name" name="to_name" class="w-full p-2 border border-gray-300 rounded-md" required>
          </div>
          <div class="mb-6">
            <label for="email" class="block mb-2">Correo Electrónico:</label>
            <input type="email" id="user_email" name="from_name" class="w-full p-2 border border-gray-300 rounded-md" required>
          </div>
          <div class="mb-6">
            <label for="message" class="block mb-2">Mensaje:</label>
            <textarea id="message" name="message" rows="4" class="w-full p-2 border border-gray-300 rounded-md" required></textarea>
          </div>
          <input type="hidden" name="reply_to" value={contactInfo?.attributes.correo} />
          <button type="submit" class="btn text-xl button-more text-white py-2 px-6 rounded">Enviar por correo</button>
        </form>
      </div>
    </section>
  </main>
</NavLayout>

<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/@emailjs/browser@3/dist/email.min.js"></script>

<script type="text/javascript">
  (function() {
      emailjs.init('y61H5KiAocQQG2JLM');
  })();

  document.addEventListener('DOMContentLoaded', function() {
    const contactForm = document.getElementById('contact-form');
    contactForm.addEventListener('submit', function(event) {
      event.preventDefault();

      // Validar el formulario antes de enviar
      if (this.checkValidity()) {
        // Bloquear el botón de enviar para evitar múltiples envíos
        const submitButton = this.querySelector('button[type="submit"]');
        submitButton.disabled = true;

        emailjs.sendForm('default_service', 'template_dax4317', this)
          .then(function(response) {
            console.log('SUCCESS!', response.status, response.text);
            alert('Mensaje enviado con éxito');
          }, function(error) {
            console.log('FAILED...', error);
            alert('Error al enviar el mensaje');
          })
          .finally(function() {
            // Desbloquear el botón de enviar después del envío o error
            submitButton.disabled = false;
          });
      }
    });
  });
</script>

<style>
  /* Estilos adicionales para la página de contacto */
  .text-purple {
    color: #401665; /* Color morado */
  }

  .button-more {
    background-color: #9d7dbb;
  }

  .button-more:hover {
    background-color: #401665;
  }
</style>
